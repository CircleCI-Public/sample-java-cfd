/*
 * Continous Food Delievery
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circleci.continuousfooddelivery;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.springframework.lang.Nullable;

/**
 * InlineResponse200
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-11T17:36:27.541627400-05:00[America/New_York]")
public class InlineResponse200 {
    public static final String SERIALIZED_NAME_IMAGE_ID = "imageId";
    @SerializedName(SERIALIZED_NAME_IMAGE_ID)
    private Integer imageId;


    public InlineResponse200 imageId(Integer imageId) {

        this.imageId = imageId;
        return this;
    }

    /**
     * Get imageId
     *
     * @return imageId
     **/
    @Nullable
    @ApiModelProperty(value = "")

    public Integer getImageId() {
        return imageId;
    }


    public void setImageId(Integer imageId) {
        this.imageId = imageId;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InlineResponse200 inlineResponse200 = (InlineResponse200) o;
        return Objects.equals(this.imageId, inlineResponse200.imageId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(imageId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InlineResponse200 {\n");
        sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

