/*
 * Continous Food Delievery
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.circleci.continuousfooddelivery;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.springframework.lang.NonNull;

import java.math.BigDecimal;

/**
 * MenuItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-11T17:36:27.541627400-05:00[America/New_York]")
public class MenuItem {
    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;

    public static final String SERIALIZED_NAME_DESCRIPTION = "description";
    @SerializedName(SERIALIZED_NAME_DESCRIPTION)
    private String description;

    public static final String SERIALIZED_NAME_NAME = "name";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;

    public static final String SERIALIZED_NAME_PRICE = "price";
    @SerializedName(SERIALIZED_NAME_PRICE)
    private BigDecimal price;

    public static final String SERIALIZED_NAME_IMAGE_ID = "imageId";
    @SerializedName(SERIALIZED_NAME_IMAGE_ID)
    private Integer imageId;


    public MenuItem id(Integer id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @NonNull
    @ApiModelProperty(required = true, value = "")

    public Integer getId() {
        return id;
    }


    public void setId(Integer id) {
        this.id = id;
    }


    public MenuItem description(String description) {

        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @NonNull
    @ApiModelProperty(required = true, value = "")

    public String getDescription() {
        return description;
    }


    public void setDescription(String description) {
        this.description = description;
    }


    public MenuItem name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @NonNull
    @ApiModelProperty(required = true, value = "")

    public String getName() {
        return name;
    }


    public void setName(String name) {
        this.name = name;
    }


    public MenuItem price(BigDecimal price) {

        this.price = price;
        return this;
    }

    /**
     * Get price
     *
     * @return price
     **/
    @NonNull
    @ApiModelProperty(required = true, value = "")

    public BigDecimal getPrice() {
        return price;
    }


    public void setPrice(BigDecimal price) {
        this.price = price;
    }


    public MenuItem imageId(Integer imageId) {

        this.imageId = imageId;
        return this;
    }

    /**
     * URL to an image of the menu item.  This should be the image from the /image endpoint
     *
     * @return imageId
     **/
    @NonNull
    @ApiModelProperty(required = true, value = "URL to an image of the menu item.  This should be the image from the /image endpoint ")

    public Integer getImageId() {
        return imageId;
    }


    public void setImageId(Integer imageId) {
        this.imageId = imageId;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MenuItem menuItem = (MenuItem) o;
        return Objects.equals(this.id, menuItem.id) &&
                Objects.equals(this.description, menuItem.description) &&
                Objects.equals(this.name, menuItem.name) &&
                Objects.equals(this.price, menuItem.price) &&
                Objects.equals(this.imageId, menuItem.imageId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, description, name, price, imageId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MenuItem {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    price: ").append(toIndentedString(price)).append("\n");
        sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

